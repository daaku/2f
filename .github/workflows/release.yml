name: Release
on:
  create:
    tags:
jobs:
  build:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: 2f
            asset_name: 2f-x86_64-unknown-linux-gnu
          - os: macos-latest
            artifact_name: 2f
            asset_name: 2f-x86_64-apple-darwin
          - os: windows-latest
            artifact_name: 2f.exe
            asset_name: 2f-x86_64-pc-windows-msvc.exe

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2.1.0
      with:
        go-version: '1.14'
    - uses: actions/checkout@v2.1.1
    - name: Dependencies
      run: go get -t -d ./...
    - name: Test
      run: go test ./...
    - name: Build
      env:
        RELEASE_VERSION: v${{ github.run_number }}
        BUILD_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: |
        BUILD_TIME=$(date +%s)
        BUILD_HASH=$(git rev-parse --short HEAD)

        LDFLAGS=""
        LDFLAGS="$LDFLAGS -X github.com/daaku/buildinfo.buildTimeUnix=$BUILD_TIME"
        LDFLAGS="$LDFLAGS -X github.com/daaku/buildinfo.buildHash=$BUILD_HASH"
        LDFLAGS="$LDFLAGS -X github.com/daaku/buildinfo.releaseVersion=$RELEASE_VERSION"
        LDFLAGS="$LDFLAGS -X github.com/daaku/buildinfo.buildURL=$BUILD_URL"

        GOFLAGS="-trimpath -ldflags='$LDFLAGS'"

        go build ./...
    - name: Release
      uses: svenstaro/upload-release-action@2.0.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.event.ref }}
